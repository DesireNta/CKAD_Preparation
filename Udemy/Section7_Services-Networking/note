I SERVICES 
  --------

Kubernetes services enable communication between various components within and outside of the application. 
they help us to connect application together. 
An application has different groups of pods.
So services enable loose coupling between micro services in applications. 
Let see about networking. 
Let's say there is a container serving a web applition, it is deployed in a node that has an IP adresse ip of 192.168.1.2
The computer in the same network has 192.168.1.10 needs to access the container that is in another network 10.244.0.2 (docker network) 
From the node it self (192.168.1.2) you can ping the container, but from the computer u can not. 
For that to happen, we will need to use a service. One of service use cas is to listen to a port on the node and forward request on that port to a pod. This type of service is known as a node port service becouse the service listns to a port on the node. 

Types of services : 

NodePort : Makes an internal pod accessible on a port on the node.
ClusterIP : This creates a virtual IP inside the cluster to enable to enable communication between differnet services such as a set of frontend servers to a set of back-end servers . 
LoadBalancer service : It provisions load balancer for the application in supported cloud provider. 

Definition file to create a service : 

 apiVerison : v1
 kind : Service
 metadata : 
     name :
     labels :  
 spec : 
     type : NodePort 
     ports : 
        - targePort : (port on wich the pod (container) is serving the app
          port : service port 
          nodePort : (the node pod between 30000 to 32767)
     selector : 
         (add the pod labels)

LAB 1 SERVICES to access the lab go to : https://uklabs.kodekloud.com/topic/kubernetes-services/
    -----------------------------------

1) how many Services exist on the system ? 
   > kubectl get service   /there is one service wich is created by kubernetes at launch. 
2) What is the targetPort configured on the kubernetes service ? 
   > kubectl describe service kubernetes 
3) how many services are configured on the kubernetes service ? 
   > kubectl describe service kubernetes 
4) how many endpoints are attached on the kubernetes service ?
   > kubectl describe service kubernetes 
5) How many Deployments exist on the system now? 
   > kubeclt get deploy 
6) What is the image used to create the pods in the deployment ? 
   > kubectl describe deploy simple-webapp-deployment
7) Create a new service to access the web application using the service-definition-1.yaml file 
    Name: webapp-service
    Type: NodePort
    targetPort: 8080
    port: 8080
    nodePort: 30080
    selector: simple-webapp
   > kubectl create -f service-definition-1.yaml

__________END LAB 1_____________________


II INGRESS NETWORKING 
   ------------------

It can confuse more than one to say the diffent between ingress and service and when to use what. 
To review the corse, go to : https://www.udemy.com/course/certified-kubernetes-application-developer/learn/lecture/13302764#overview
it has a lot of explaination that helps to enderstand. 

Ingress helps the users to access the application using a single, externally url that you can configure to route to different services within the cluster based on the url path. At the same time, implement SSL security as well.
So you can think ingress as a layer 7 load balancer builtin to the kubernetes cluster that can be configured using kubernetes primitives just like any other object in k8s. Rememeber, this is a kubernetes object, so you need to expose it to make it accessible outside the cluster. 
To create a ingress, u will need to deploy an INGRESS CONTROLLER (nginx, haproxy or traefix ...) and an INGRESS RESOURCES. 
One thing to know. A kubernets cluster does not come with an ingress controller by default. 

   Ingress controller : 

This must be deployed, there a number of solutions available for ingress controller. there are different solutions out there like GCE http(s) for google cloud platform, Istio, Contour, HAproxy, nginx and so on.

GCE and nginx are being supported and maintenained by kubernetes project. An ingress controller is deployed like any other deployement in kubernetes. 

apiVersion : apps/v1
kind : Deployment 
metadata : 
   name : nginx-ingress-controller
spec : 
  replicas : 1
  selector : 
    matchLabels : 
       name : nginx-ingress
    template : 
       metadata : 
          labels : 
             name : nginx-ingress 
       spec : 
         containers : 
            - name : nginx-ingress-controller
              image : quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.21.0
         args : 
           - /nginx-ingress-controller
           - --configmap=$(POD_NAMESPACE)/nginx-configuration
         env : 
          - name : POD_NAME 
            valueFrom 
              fieldRef : 
                fielPath : metadata.name 
          _ name : POD_NAMESPACE 
            valueFrom 
              fieldRef: 
                fielPath : metadata.namespace
          ports : 
           - name : http 
             containerPort : 80 
           - name : https 
             containerPort : 443

After creation we need a service of type of NodePort to epose it outside of the cluster.  
As mentioned before, the ingress controlles have additional intelligence built into them to monitor the kubernetes cluster for ingress resources and configure the underling nginx server when something has changed. So for the ingress controller to do that, it requires a service account with the right set of permissions. So for that we will hava to create a service account. 

  Ingress resource : 

An ingress resource is a set of rules and configurations applied on the ingress controller.
ingress resource is created using a definition file : 

apiVersion : networking.k8s.io/v1
kind : Ingress
metadada : 
  name : give_it_a_name 
spec : 
  rules: 
  - http : 
      paths : 
        - path: /toto
          backend : 
             serviceName: service_name_1
             servicePort : 80
        - path: /titi
          backend : 
            serviceName : service_name_2
            servicePort : 80 

In k8s version 1.20+ we can create an Ingress resource from the imperative way like this:
- kubectl create ingress <ingress_name> --rule = "host/path=service:port"
Find more information and examples in the below reference link:-

https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands#-em-ingress-em-

References:-

https://kubernetes.io/docs/concepts/services-networking/ingress

https://kubernetes.io/docs/concepts/services-networking/ingress/#path-types


LAB 2 Ingress networking 1 to access the lab got to : https://uklabs.kodekloud.com/topic/ingress-networking-1/

1) We have deployed Ingress Controller, resources and applications. Note: They are in different namespaces. 
2) Which namespace is the Ingress Controller deployed in? 
   > kubectl get all --all-namespaces | grep "ingress"
3) What is the name of the Ingress Controller Deployment? 
   > kuectl get deploy --all-namespaces | grep "ingress"  /then name is ingresss-nginx-controller
4) Which namespace are the applications deployed in? 
   > kubectl get deploy --all-namespaces | grep "app"
5) How many applications are deployed in the app-space namespace? Count the number of deployments in this namespace
   > kubectl get all -n app-space /and see the number of deployments
6) Which namespace is the Ingress Resource deployed in? 
   > kubectl get ingress --all-namespaces
7) What is the name of the Ingress Resource . 
   > kubectl get ingress -n app-space -o name 
8) What is the Host configured on the Ingress Resource? 
   > kubectl describe ingress ingress-wear-watch -n app-space 
9) what backend is the /wear path on the ingress configured with ? 
   > kubeclt describe ingress ingress-wear-watch -n app-space 
10) At what path is the video streaming application made available on the Ingress?
   > kubectl describe ingress ingress-wear-watch -n app-space 
11) If the requirement does not match any of the configured paths what service are the requests forwarded to? 
   > kubectl describe ingress ingress-wear-watch -n app-space
12) You are requested to change the URLs at which the applications are made available.Make the video application available at /stream   > kubectl edit ingress ingress-wear-watch -n app-space /get the file the definition and edit it  
13) Due to increased demand, your business decides to take on a new venture. You acquired a food delivery company. Their applications have been migrated over to your cluster.Inspect the new deployments in the app-space namespace
   > kubectl get deploy -n app-space 
14) You are requested to add a new path to your ingress to make the food delivery application available to your customers.
    Make the new application available at /eat.
   > kubectl edit ingress ingress-wear-watch -n app-space /add a new backend (check the add_food.yaml)  
15) A new payment service has been introduced. Since it is critical, the new application is deployed in its own namespace.
    Identify the namespace in which the new application is deployed.
   > kubectl get deploy --all-namespaces 
16) You are requested to make the new application available at /pay.
Identify and implement the best approach to making this application available on the ingress controller and test to make sure its working. Look into annotations: rewrite-target as well.
  > kubectl create -f add_pay.yaml 

-----END LAB 2 -------------------------- 

 
